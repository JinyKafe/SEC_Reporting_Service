//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.05.19 at 01:31:41 PM CEST 
//


package gov.sec.ratings;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * Generic extended link type
 *
 *
 * <p>Java class for extendedType complex type.
 *
 * <p>The following schema fragment specifies the expected content contained within this class.
 *
 * <pre>
 * &lt;complexType name="extendedType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *         &lt;element ref="{http://www.xbrl.org/2003/XLink}title"/&gt;
 *         &lt;element ref="{http://www.xbrl.org/2003/XLink}documentation"/&gt;
 *         &lt;element ref="{http://www.xbrl.org/2003/XLink}locator"/&gt;
 *         &lt;element ref="{http://www.xbrl.org/2003/XLink}arc"/&gt;
 *         &lt;element ref="{http://www.xbrl.org/2003/XLink}resource"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute ref="{http://www.w3.org/1999/xlink}type use="required" fixed="extended""/&gt;
 *       &lt;attribute ref="{http://www.w3.org/1999/xlink}role use="required""/&gt;
 *       &lt;attribute ref="{http://www.w3.org/1999/xlink}title"/&gt;
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" /&gt;
 *       &lt;anyAttribute processContents='lax' namespace='http://www.w3.org/XML/1998/namespace'/&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "extendedType", namespace = "http://www.xbrl.org/2003/XLink", propOrder = {
    "titleOrDocumentationOrLocator"
})
@XmlSeeAlso({
    FootnoteLink.class,
    PresentationLink.class,
    DefinitionLink.class,
    CalculationLink.class,
    LabelLink.class,
    ReferenceLink.class
})
public class ExtendedType {

  @XmlElementRefs({
      @XmlElementRef(name = "title", namespace = "http://www.xbrl.org/2003/XLink", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "documentation", namespace = "http://www.xbrl.org/2003/XLink", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "locator", namespace = "http://www.xbrl.org/2003/XLink", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "arc", namespace = "http://www.xbrl.org/2003/XLink", type = JAXBElement.class, required = false),
      @XmlElementRef(name = "resource", namespace = "http://www.xbrl.org/2003/XLink", type = JAXBElement.class, required = false)
  })
  protected List<JAXBElement<?>> titleOrDocumentationOrLocator;
  @XmlAttribute(name = "type", namespace = "http://www.w3.org/1999/xlink", required = true)
  protected String type;
  @XmlAttribute(name = "role", namespace = "http://www.w3.org/1999/xlink", required = true)
  protected String role;
  @XmlAttribute(name = "title", namespace = "http://www.w3.org/1999/xlink")
  protected String title;
  @XmlAttribute(name = "id")
  @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
  @XmlID
  @XmlSchemaType(name = "ID")
  protected String id;
  @XmlAnyAttribute
  private Map<QName, String> otherAttributes = new HashMap<QName, String>();

  /**
   * Gets the value of the titleOrDocumentationOrLocator property.
   *
   * <p>
   * This accessor method returns a reference to the live list, not a snapshot. Therefore any modification you make to the returned list will be present inside
   * the JAXB object. This is why there is not a <CODE>set</CODE> method for the titleOrDocumentationOrLocator property.
   *
   * <p>
   * For example, to add a new item, do as follows:
   * <pre>
   *    getTitleOrDocumentationOrLocator().add(newItem);
   * </pre>
   *
   *
   * <p>
   * Objects of the following type(s) are allowed in the list {@link JAXBElement }{@code <}{@link TitleType }{@code >} {@link LinkbaseDocumentationType } {@link
   * JAXBElement }{@code <}{@link DocumentationType }{@code >} {@link JAXBElement }{@code <}{@link LocatorType }{@code >} {@link JAXBElement }{@code <}{@link
   * LocatorType }{@code >} {@link JAXBElement }{@code <}{@link ArcType }{@code >} {@link JAXBElement }{@code <}{@link CalculationArc }{@code >} {@link
   * JAXBElement }{@code <}{@link ArcType }{@code >} {@link JAXBElement }{@code <}{@link ArcType }{@code >} {@link JAXBElement }{@code <}{@link ArcType }{@code
   * >} {@link JAXBElement }{@code <}{@link PresentationArc }{@code >} {@link JAXBElement }{@code <}{@link ArcType }{@code >} {@link JAXBElement }{@code
   * <}{@link Label }{@code >} {@link JAXBElement }{@code <}{@link Reference }{@code >} {@link JAXBElement }{@code <}{@link Footnote }{@code >} {@link
   * JAXBElement }{@code <}{@link ResourceType }{@code >}
   */
  public List<JAXBElement<?>> getTitleOrDocumentationOrLocator() {
    if (titleOrDocumentationOrLocator == null) {
      titleOrDocumentationOrLocator = new ArrayList<JAXBElement<?>>();
    }
    return this.titleOrDocumentationOrLocator;
  }

  /**
   * Gets the value of the type property.
   *
   * @return possible object is {@link String }
   */
  public String getType() {
    if (type == null) {
      return "extended";
    } else {
      return type;
    }
  }

  /**
   * Sets the value of the type property.
   *
   * @param value allowed object is {@link String }
   */
  public void setType(String value) {
    this.type = value;
  }

  /**
   * Gets the value of the role property.
   *
   * @return possible object is {@link String }
   */
  public String getRole() {
    return role;
  }

  /**
   * Sets the value of the role property.
   *
   * @param value allowed object is {@link String }
   */
  public void setRole(String value) {
    this.role = value;
  }

  /**
   * Gets the value of the title property.
   *
   * @return possible object is {@link String }
   */
  public String getTitle() {
    return title;
  }

  /**
   * Sets the value of the title property.
   *
   * @param value allowed object is {@link String }
   */
  public void setTitle(String value) {
    this.title = value;
  }

  /**
   * Gets the value of the id property.
   *
   * @return possible object is {@link String }
   */
  public String getId() {
    return id;
  }

  /**
   * Sets the value of the id property.
   *
   * @param value allowed object is {@link String }
   */
  public void setId(String value) {
    this.id = value;
  }

  /**
   * Gets a map that contains attributes that aren't bound to any typed property on this class.
   *
   * <p>
   * the map is keyed by the name of the attribute and the value is the string value of the attribute.
   * <p>
   * the map returned by this method is live, and you can add new attribute by updating the map directly. Because of this design, there's no setter.
   *
   * @return always non-null
   */
  public Map<QName, String> getOtherAttributes() {
    return otherAttributes;
  }

}
